name: Build & Deploy to Portainer

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  IMAGE_NAME: quiz-bot

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare tags
        id: prep
        run: |
          OWNER_LC=$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')
          BRANCH_TAG=${GITHUB_REF_NAME//\//-}
          echo "owner_lc=$OWNER_LC" >> $GITHUB_OUTPUT
          echo "branch_tag=$BRANCH_TAG" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push image to GHCR
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ steps.prep.outputs.owner_lc }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ghcr.io/${{ steps.prep.outputs.owner_lc }}/${{ env.IMAGE_NAME }}:${{ steps.prep.outputs.branch_tag }}

  deploy-to-portainer:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Portainer API
        id: portainer_auth
        run: |
          JWT=$(curl -s -X POST "http://${{ secrets.PORTAINER_IP }}/api/auth" \
            -H "Content-Type: application/json" \
            -d "{\"username\": \"${{ secrets.PORTAINER_USER }}\", \"password\": \"${{ secrets.PORTAINER_PASS }}\"}" \
            | jq -r '.jwt')
          echo "jwt=$JWT" >> $GITHUB_OUTPUT

      - name: Update compose file with new tag
        run: |
          BRANCH_TAG=${GITHUB_REF_NAME//\//-}
          sed -i "s|ghcr.io/.*/${{ env.IMAGE_NAME }}:.*|ghcr.io/${{ steps.prep.outputs.owner_lc }}/${{ env.IMAGE_NAME }}:${BRANCH_TAG}|" docker-compose.yml

      - name: Deploy updated stack to Portainer
        run: |
          curl -s -X PUT "http://${{ secrets.PORTAINER_IP }}/api/stacks/${{ secrets.PORTAINER_STACK_ID }}?endpointId=1&pullImage=true" \
            -H "Authorization: Bearer ${{ steps.portainer_auth.outputs.jwt }}" \
            -H "Content-Type: multipart/form-data" \
            -F "file=@docker-compose.yml" \
            -F "prune=true"